Gmail:-  vraj.shah@mail.codetrade.io
Password:- 4Q3fAnw2uN

Gmail QuadWave

UserName:- vraj.s@quadwave.com
PassWord:- //this is Old One -->gZ%6DFje //this is Old One
ct##123456

Ms Team

vraj.s@quadwave.com
Maw90388

https://stackoverflow.com/questions/42107167/how-to-pass-data-from-child-to-parent-component-angular


Hubstaff:-  vraj.shah
Password:-  4Q3fAnw$#2uN&


db schema,architecture
Regular Exp ma \ ni jagya e \\

^(((\\+44\\s?\\d{4}|\\(?0\\d{4}\\)?)\\s?\\d{3}\\s?\\d{3})|((\\+44\\s?\\d{3}|\\(?0\\d{3}\\)?)\\s?\\d{3}\\s?\\d{4})|((\\+44\\s?\\d{2}|\\(?0\\d{2}\\)?)\\s?\\d{4}\\s?\\d{4}))(\\s?\\#(\\d{4}|\\d{3}))?$


Configuration.GetSection("ConnectionString:GraphQLDbConnString")


set NODE_OPTIONS=--max_old_space_size=8192

 "Default": "Server=DESKTOP-HNL6BA5; Database=localdb;User ID=sentinel;Password=rcc@1234;"

220

Child-to-parent


Register the EventEmitter in your child component as the @Output:

@Output() onDatePicked = new EventEmitter<any>();
Emit value on click:

public pickDate(date: any): void {
    this.onDatePicked.emit(date);
}
Listen for the events in your parent component's template:

<div>
    <calendar (onDatePicked)="doSomething($event)"></calendar>
</div>
and in the parent component:

public doSomething(date: any):void {
    console.log('Picked date: ', date);
}


Parent-to-Child


To use the @Input() decorator in a child component class, first import Input and then decorate the property with @Input(), as in the following example.

src/app/item-detail/item-detail.component.ts

import { Component, Input } from '@angular/core'; // First, import Input
export class ItemDetailComponent {
  @Input() item = ''; // decorate the property with @Input()
}

In this case, @Input() decorates the property item, which has a type of string, however, 
@Input() properties can have any type, such as number, string, boolean, or object.
The value for item comes from the parent component.

Next, in the child component template, add the following:

src/app/item-detail/item-detail.component.html

<p>
  Today's item: {{item}}
</p>

Configuring the parent component
The next step is to bind the property in the parent component's template. In this example, the parent component template is app.component.html.

Use the child's selector, here <app-item-detail>, as a directive within the parent component template.

Use property binding to bind the item property in the child to the currentItem property of the parent.

src/app/app.component.html

<app-item-detail [item]="currentItem"></app-item-detail>
In the parent component class, designate a value for currentItem:

src/app/app.component.ts

export class AppComponent {
  currentItem = 'Television';
}